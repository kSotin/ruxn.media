server {
    listen 80;
    server_name torrent.ruxn.media;
    return 301 https://$host$request_uri;
}

server {
    listen 443;
    server_name torrent.ruxn.media;

    # at this point we haven't created the certificate yet, but that's ok.
    # if, when creating the certificate (see below) it goes to another folder, be sure
    # to change these lines accordingly
    ssl_certificate           /etc/letsencrypt/live/ruxn.media/fullchain.pem;
    ssl_trusted_certificate   /etc/letsencrypt/live/ruxn.media/chain.pem;
    ssl_certificate_key       /etc/letsencrypt/live/ruxn.media/privkey.pem;

    ssl on;
    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1.3 TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    ssl_ecdh_curve prime256v1:secp384r1:secp521r1;
    ssl_session_tickets off;
    # OCSP stapling
    ssl_stapling on; 
    ssl_stapling_verify on;

    # fix upstream timed out
    # proxy_read_timeout 240s;

    location / {
        # you can use any other port other than 30000 as long as it is available on your system
        proxy_pass              http://localhost:8080/;
        proxy_set_header        X-Forwarded-Host            $server_name:$server_port;
        proxy_hide_header       Referer;
        proxy_hide_header       Origin;
        proxy_set_header        Referer                     '';
        proxy_set_header        Origin                      '';
        add_header              X-Frame-Options             "SAMEORIGIN"; # see note
    }
}
